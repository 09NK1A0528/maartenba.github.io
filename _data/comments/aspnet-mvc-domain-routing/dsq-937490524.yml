id: dsq-937490524
replyToId: dsq-937490517
date: 2011-04-13T16:47:34.0000000+02:00
name: jse
avatar: https://disqus.com/api/users/avatars/jse.jpg
message: <p>Had the same issue.<br>I've changed GetRouteData to get the path values from base and not by parsing them in the overridden method.<br>Didn't test thoroughly, but works on my machine for the time being<br>public override RouteData GetRouteData(HttpContextBase httpContext)<br>        {<br>            // Build regex<br>            _DomainRegex = CreateRegex(Domain);</p><p>            // Request information<br>            string requestDomain = httpContext.Request.Headers["host"];<br>            if (!string.IsNullOrEmpty(requestDomain))<br>            {<br>                if (requestDomain.IndexOf(":") &gt; 0)<br>                {<br>                    requestDomain = requestDomain.Substring(0, requestDomain.IndexOf(":"));<br>                }<br>            }<br>            else<br>            {<br>                if (httpContext.Request.Url != null) requestDomain = httpContext.Request.Url.Host;<br>            }</p><p>            // Match domain and route<br>            Match domainMatch = _DomainRegex.Match(requestDomain ?? "");</p><p>            // Route data<br>            RouteData data = base.GetRouteData(httpContext);<br>            if (domainMatch.Success)<br>            {<br>                data = data ?? new RouteData(this, RouteHandler);</p><p>                // Add defaults first<br>                if (Defaults != null)<br>                {<br>                    foreach (KeyValuePair&lt;string, object&gt; item in<br>                        Defaults.Where(item =&gt; ! data.Values.ContainsKey(item.Key)))<br>                    {<br>                        data.Values[item.Key] = item.Value;<br>                    }<br>                }</p><p>                // Iterate matching domain groups<br>                for (int i = 1; i &lt; domainMatch.Groups.Count; i++)<br>                {<br>                    Group group = domainMatch.Groups[i];<br>                    if (group.Success)<br>                    {<br>                        string key = _DomainRegex.GroupNameFromNumber(i);</p><p>                        if (!string.IsNullOrEmpty(key) &amp;&amp; !char.IsNumber(key, 0))<br>                        {<br>                            if (!string.IsNullOrEmpty(group.Value))<br>                            {<br>                                data.Values[key] = group.Value;<br>                            }<br>                        }<br>                    }<br>                }<br>            }</p><p>            return data;<br>        }</p>
