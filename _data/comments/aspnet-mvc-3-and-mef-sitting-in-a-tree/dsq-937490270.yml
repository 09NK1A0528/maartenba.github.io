id: dsq-937490270
date: 2010-10-27T00:18:43.0000000+02:00
name: maartenba
avatar: https://disqus.com/api/users/avatars/maartenba.jpg
message: '<p>For the record: the following works with ASP.NET MVC 3 beta:</p><p>    [Export(typeof(MefDependencyResolver))]<br>    [PartCreationPolicy(CreationPolicy.Shared)]<br>    public class MefDependencyResolver<br>        : IDependencyResolver<br>    {<br>        const string HttpContextKey = "__MefDependencyResolver_Container";</p><p>        private ComposablePartCatalog catalog;</p><p>        [ImportingConstructor]<br>        public MefDependencyResolver(ComposablePartCatalog catalog) {<br>            this.catalog = catalog;<br>        }</p><p>        protected CompositionContainer Container<br>        {<br>            get<br>            {<br>                if (!HttpContext.Current.Items.Contains(HttpContextKey))<br>                {<br>                    HttpContext.Current.Items.Add(HttpContextKey,<br>                        new CompositionContainer(catalog));<br>                }</p><p>                return (CompositionContainer)HttpContext.Current.Items[HttpContextKey];<br>            }<br>        }</p><p>        public object GetService(Type serviceType)<br>        {<br>            var exports = this.Container.GetExports(serviceType, null, null); <br>            if (exports.Any()) {<br>                return exports.First().Value; <br>            }<br>            return null;<br>        }</p><p>        public IEnumerable&lt;object&gt; GetServices(Type serviceType)<br>        {<br>            var exports = this.Container.GetExports(serviceType, null, null);<br>            if (exports.Any())<br>            {<br>                return exports.AsEnumerable();<br>            }<br>            return new List&lt;object&gt;();<br>        }<br>    }</p>'
