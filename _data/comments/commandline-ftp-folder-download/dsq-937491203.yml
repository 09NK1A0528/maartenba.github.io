id: dsq-937491203
date: 2007-11-18T15:11:39.0000000+01:00
name: Michael
avatar: https://disqus.com/api/users/avatars/Michael.jpg
message: '<p>Really great thing!</p><p>Only problem I had were the parent directories that were listed by the ftp request but not handled by the prog.<br>Changes:</p><p>        public enum DirectoryEntryTypes<br>        {<br>            File,<br>            Directory,<br>            ParentDirectory<br>        }</p><p>        public FTPfileInfo(string line, string path)<br>        {<br>            //parse line<br>            Match m = GetMatchingRegex(line);<br>            if (m == null)<br>            {<br>                //failed<br>                throw (new ApplicationException("Unable to parse line: " + line));<br>            }<br>            else<br>            {<br>                _filename = m.Groups["name"].Value;<br>                _path = path;</p><p>                Int64.TryParse(m.Groups["size"].Value, out _size);<br>                //_size = System.Convert.ToInt32(m.Groups["size"].Value);</p><p>                _permission = m.Groups["permission"].Value;<br>                string _dir = m.Groups["dir"].Value;<br>                if (_dir != "" &amp;&amp; _dir != "-")<br>                {<br>                    string testForDots = Filename.Replace(".", "");<br>                    if (testForDots.Length == 0)<br>                        _fileType = DirectoryEntryTypes.ParentDirectory;<br>                    else<br>                    _fileType = DirectoryEntryTypes.Directory;</p><p>                }<br>                else<br>                {<br>                    _fileType = DirectoryEntryTypes.File;<br>                }</p><p>                try<br>                {<br>                    _fileDateTime = DateTime.Parse(m.Groups["timestamp"].Value);<br>                }<br>                catch (Exception)<br>                {<br>                    _fileDateTime = Convert.ToDateTime(null);<br>                }</p><p>            }<br>        }</p><p>        private void _downloadFTPFolderRecursive(FTPclient client, string remoteFolder, string localFolder, bool recursive) <br>        {<br>            // Get list of folders/files and download them<br>            FTPdirectory remoteFolderInfo = client.ListDirectoryDetail(remoteFolder);<br>            foreach (FTPfileInfo fileInfo in remoteFolderInfo)<br>            {<br>                // Download file<br>                if (fileInfo.FileType == FTPfileInfo.DirectoryEntryTypes.File)<br>                {<br>                    Console.WriteLine("Downloading file " + fileInfo.FullName + "...");<br>                    client.Download(fileInfo, localFolder + fileInfo.FullName.Replace(remoteFolder, ""), true);<br>                    Console.WriteLine("Downloaded " + fileInfo.FullName + ".");<br>                }<br>                else if (fileInfo.FileType == FTPfileInfo.DirectoryEntryTypes.Directory)<br>                {<br>                    // Recursive download?<br>                    if (recursive)<br>                    {<br>                        // Folder exists? If not, create it!<br>                        string benoetigterOrdner = localFolder + fileInfo.FullName.Replace(remoteFolder, "");<br>                        if (!Directory.Exists(benoetigterOrdner))<br>                        {<br>                            string newFolder = localFolder + fileInfo.FullName.Replace(remoteFolder, "");<br>                             Directory.CreateDirectory(newFolder);<br>                         }</p><p>                        // Download folder<br>                        Console.WriteLine("Downloading folder " + fileInfo.FullName + "...");<br>                        _downloadFTPFolderRecursive(client, fileInfo.FullName, localFolder + fileInfo.FullName.Replace(remoteFolder, ""), recursive);<br>                        Console.WriteLine("Downloaded folder " + fileInfo.FullName + ".");<br>                    }<br>                }<br>            }<br>        }</p><p>best wishes <br>Michael</p>'
