id: dsq-937490819
date: 2008-10-30T15:37:01.0000000+01:00
name: Petar Petrov
avatar: https://disqus.com/api/users/avatars/Petar Petrov.jpg
message: <p>Hi.<br>I have a suggestion and a question. You should dispose the memory stream used in de/Serialization. Something like this :</p><p>        public static string Serialize(object subject)<br>        {<br>            byte[] data = null;</p><p>            using (MemoryStream ms = new MemoryStream())<br>            {<br>                BinaryFormatter bf = new BinaryFormatter();<br>                bf.Serialize(ms, subject);<br>                data = ms.ToArray();<br>            }</p><p>            return Convert.ToBase64String(data);<br>        }</p><p>        public static object Deserialize(string subject)<br>        {<br>            using (MemoryStream ms = new MemoryStream(Convert.FromBase64String(subject)))<br>            {<br>                BinaryFormatter bf = new BinaryFormatter();<br>                return bf.Deserialize(ms);<br>            }<br>        }</p><p>I've seen that DefaultModelBinder implements IModelBinder. Is it possible to have a generic version IModelBinder&lt;T&gt; like for example ViewPage ? In this case ConvertType will simply return T and we don't need the check destinationType != typeof(Person). In fact there will be no destinationType argument in ConvertType. I don't like the object value parameter either and the cast as string, as string[]. I will be very happy to see string[] values as parameter.</p>
