id: dsq-937490816
date: 2008-10-05T21:59:16.0000000+02:00
name: Chris
avatar: https://disqus.com/api/users/avatars/Chris.jpg
message: <p>I guess since the demo doesn't demonstrate how the original model serialized, is updated from form values, i wasn't able to see that in action.</p><p>But that gets me thinkin now about concurrency.  The hidden field thingy seems worse.</p><p>Let's say Jack and Jill sit down at 8:00am to edit the same Person, and Jill gets up to get a cup of coffee.  While she's gone, Jack changes some details on person and saves it to the database.</p><p>Jill returns at 8:05am(with her cup of coffee), she has a stale version of person, makes some changes, and saves to the database.  She stepped on the changes that Jack made.  In terms of concurrency, doing it this way actually hides the fact the the problem exists, right? If the last person to save is going to be the winner so to speak, why waste time with the serializing in the first place?</p><p>If concurrency is really the issue, you will want to NOT save Jill's changes, rather you'll want to let her know that her changes cannot be saved at this time because user Jack made changes while she was gone.  Follow me?</p>
