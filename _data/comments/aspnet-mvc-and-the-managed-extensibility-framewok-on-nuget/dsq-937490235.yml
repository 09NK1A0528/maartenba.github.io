id: dsq-937490235
date: 2011-02-01T22:59:59.0000000+01:00
name: Corey Gaudin
avatar: https://disqus.com/api/users/avatars/Corey Gaudin.jpg
message: '<p>Maarten,</p><p>Thank you so much for this! Thanks to all of the people that contributed to the MefContrib project also! This is really awesome! It is a much cleaner way to do this than what I had previously with MVC3 and MEF using the Dependency Resolver since I would always forget an export somewhere. This is much easier and nicer.</p><p>Quick question: I have been playing with this reverting to this solution than what I had and it works really well. However, I noticed that by default all classes are set as NonShared Exports. This makes alot of sense, because Controllers need to be non-shared to be useful in an MVC application. It also makes alot of sense with Repository classes since having a shared context between 1000s of users would be very feasible or practical. However, there are some cases where some classes just make sense as a Shared Export. How do you accomplish this using this framework? I have tried the markup PartCreationPolicy(CreationPolicy.Shared) on the Exported Classes and the framework does not honor this. It will create a new version every time. Is there any way to do this in the existing framework released? Am I missing something? I can of course fix my problem using static members in the class instance to get around this problem, but in some cases it is far cleaner to just mark the entire class as a Shared Export. Any ideas?</p><p>Thanks again Maarten for making my job easier. I was wondering why this wasnt a built in feature consider its MEF. But this is a better solution to have it as a NuGet package supported by cool people.</p><p>Corey Gaudin</p>'
