id: dsq-937490985
date: 2008-09-25T13:47:15.0000000+02:00
name: maartenba
avatar: https://disqus.com/api/users/avatars/maartenba.jpg
message: "<p>There have been some changes in preview 5, that's correct.</p><p>All ViewEngine implementations for the ASP.NET MVC framework implement the IViewEngine interface:<br>public interface IViewEngine   <br>{   <br>    ViewEngineResult FindPartialView(ControllerContext controllerContext, string partialViewName);   <br>    ViewEngineResult FindView(ControllerContext controllerContext, string viewName, string masterName);   <br>}</p><p>The only responsibility an IViewEngine implementation has, is finding a view or partial view in the application. When a view has not been found, the implementation should return a list of searched locations. If a view has been found, a ViewEngineResult is returned.<br>When a view is required to render, each registered IViewEngine is consulted (in order of registration) until the ASP.NET it finds one that returns a view that can be rendered. If no view can be found, an exception will be thrown.</p><p>A ViewEngine could look like this:</p><p>using System.Web.Mvc;</p><p>namespace CustomViewEngine.Core<br>{<br>    public class SimpleViewEngine : VirtualPathProviderViewEngine<br>    {<br>        #region Constructor</p><p>        public SimpleViewEngine() : base()<br>        {<br>            base.MasterLocationFormats = new string[] { \"\" };</p><p>            base.ViewLocationFormats = new string[] { \"~/Views/{1}/{0}.htm\",<br>                                                      \"~/Views/{1}/{0}.html\",<br>                                                      \"~/Views/Shared/{0}.htm\",<br>                                                      \"~/Views/Shared/{0}.html\"<br>            };</p><p>            base.PartialViewLocationFormats = ViewLocationFormats; <br>        }</p><p>        #endregion</p><p>        #region VirtualPathProviderViewEngine Members</p><p>        protected override IView CreatePartialView(ControllerContext controllerContext, string partialPath)<br>        {<br>            return new SimpleView(partialPath);   <br>        }</p><p>        protected override IView CreateView(ControllerContext controllerContext, string viewPath, string masterPath)<br>        {<br>            return new SimpleView(viewPath);   <br>        }</p><p>        #endregion<br>    }<br>}</p><p>The View itself should implement IView which has one method on which you can render:</p><p>void Render(ViewContext viewContext, TextWriter writer)</p>"
